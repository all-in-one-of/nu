#+TAGS: math haskell

* Kappa Quick Notes
	Quick notes:

** ### VIM TIPS           ###

1) <Ctrl>+l to switch off highlights in vim
2) ds" - to remove "" around a word
3) \\cc   - comment out
3.5) \\cu - uncomment
4) cs]} - surround with {}
5) :%s/foo/bar/g - exchange all instances of foo with bar
6) ctrl+R - redo

2) Start ghci with gloss, so that it does not hang:
ghci -fno-ghci-sandbox 

** ### SYSTEM MAINTENANCE ###

3) UPDATE PORTAGE:
Emerge --sync
emerge --update --deep --with-bdeps=y --newuse world
emerge --update --deep --newuse world
# delete unused dependencies:
emerge --depclean 
# rebuild missing dependencies
# revdep-rebuild
revdep-rebuild -ip

# timer/date update
nu madjestic # hwclock --set --date="12/21/2015 19:23:00"
nu madjestic # hwclock --hctosys --localtime

** ### Kernel Upgrade     ###
# copy old config

	 make oldconfig
	 make modules_prepare
	 make && make modules_install
	 cp ./arch/x86/boot/bzImage /boot/kernel-3.10.7-gentoo
	 eselect kernel list
	 eselect kernel set 1
	 grub2-mkconfig -o /boot/grub/grub.cfg

** ### EMACS TIPS         ###
# turn off line-wrapping:
M-x toggle-truncate-linesd

** ### MISC               ###
4) Find out your own IP:
wget -q -O - checkip.dyndns.org|sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
5)check running services:
rc-status
6)make ghc keep intermediary files: it will create (won't delete technically) /tmp/ghc${pid} with intermediate files
ghc -keep-tmp-files foo.hs

** ### PYTHON             ###
python -m cProfile foo.py

** ### iptables           ###
/etc/init.d/iptables 
/etc/conf.d/iptables

** ### GIT                ###
http://git-scm.com/book/en/Git-on-the-Server-Hosted-Git

# add all files in 
git add ./Projects
# commit added files
git commit -a
# write the changes
git push

# syncing a fork:
[[https://help.github.com/articles/syncing-a-fork/][Syncing a fork]]

# UnrealEngine4 
[[https://github.com/EpicGames/UnrealEngine/blob/promoted/Engine/Build/BatchFiles/Linux/README.md]]

** ### XMONAD             ###
# application fast start
# WINDOWS button is the one with the MSWindows logo on it
WINDOWS-p

** ### EMACS              ###
*** ## CPP
		# Enable semantic auto-complete (?)
		semantic-complete-self-insert
		# Browses the local document with your browser. On a module import line, the document of the module is browsed. On a function or type, its document is browsed.
		M-C-d 
		# Envoke help on a topic:
		C-h f iedit-mode <RET>
		# Assigning keys
		(global-set-key (kbd "C-c a") 'doodlebug)
		# not sure what it is but may be useful:
		(lookup-key (current-global-map) (kbd "C-c a"))
		# Turn on/off line breaks:
		(toggle-truncate-lines)

		# A Backup Script with rsnapshot
		#!/bin/sh
		#
		#echo "### RSNAPSHOT DAILY ###"
		#mount /mnt/backup && rsnapshot -c /etc/rsnapshot.d/daily.conf daily || echo "Backup failure"
		#umount /mnt/backup
		#echo
		qmake -o Makefile triangle.pro

		# Backup using dd's
		dd if=/dev/sda of=/dev/sdb bs=4096 conv=noerror,sync

** ### STEAM              ###
	 MESA_GL_VERSION_OVERRIDE=4.0 MESA_GLSL_VERSION_OVERRIDE=400 %command%
** ### MISC               ###
	 ffmpeg -i movie.%04d.png -c:v libx264 -r 30 out_x264.avi
* How to use Journal?

** Basics

M-return       | to start a new entry |
M-right/M-left | to change the depthe of insertion |
C-u M-! date   | to insert date |

*** Haskell
		[[*Haskell%20tips][Haskell tips]]
** New Deep Entry

** TODOs

	 S-right/S-left to change the status

	 C-c . to insert timestamp

** List and markup
  + one
  + two
*bold*
/italic/
=code=

** Links [[*Links][*]]
   C-c l     (org-store-link)       | to store link to current location
   C-c C-L to store the link        |
   C-c C-l to inser the link        |
   C-c C-l on existin link to edit  |
   [[http://orgmode.org/manual/Handling-links.html][on_Links]]
   [[http://orgmode.org/manual/External-links.html][gentoo]]
   [[docview:~/Downloads/Abbelian_Categories.pdf::100][PDF]]
	 [[docview:~/Projects/gmsg/basic_des/basic.pdf::1][open_pdf with docview]]
	 S-enter create a symlink to a current file in dired

* Bash
	an interesting example of "loop over all files in a directory 
	and do stuff to each file:"
	[[file:/usr/local/include/Field3D/relink.sh]]
	[[~/Documents/Bourne_Shell_Scripting.pdf]]
* Xmonad
** DONE : assign hot-keys for brightness-up/brightness down
** DONE : assign hot-keys for volume up/down
* Editing a movie:
	(lossless codec)
	ffmpeg -i model.rop_comp1.%04d.png -c:v huffyuv out.avi
	then import and re-export through pitivi
* Emacs tips
	‘M-x toggle-truncate-lines’ - turn on long lines warp
	'<C-S-left>' - swap buffers

	'C-x n n' - narrow region/scope
	'C-x n w' - widen region/scope

	(paredit mode)
	selection + ( -> (selection)
	... same with [, {

	(selection)	<M-s> -> selection

	(paren-mode)
	<M-S> ( : foo -> (foo)
	M-up    : (foo) -> foo

** Registers, bookmarks and desktop
	 C-x r w <register> to store a window configuration in a register
	 C-x r j <register> (where <register> is a single character) to jump back to a register.
	 http://stackoverflow.com/questions/2572950/preserve-window-layout-in-emacs
	 
	 https://www.gnu.org/software/emacs/manual/html_node/emacs/Registers.html
	 http://www.gnu.org/savannah-checkouts/gnu/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html
	 https://www.gnu.org/software/emacs/manual/html_node/emacs/Bookmarks.html#Bookmarks
	 https://github.com/ffevotte/desktop-plus
	 
* Haskell tips																											:haskell:
** Commenting code:
  {-| @Event t a@ represents a stream of events as they occur in time.
Semantically, you can think of @Event t a@ as an infinite list of values
that are tagged with their corresponding time of occurence,

> type Event t a = [(Time,a)]
-}

this code should be shown in haddock

** Comments with shm:
	 M-; # comment text region
	 (with commented region selected) M-; # uncomment text region
** Tags:
	 to generate tags use:
	 ~/bin/tags
*** hothasktags
find . | egrep '\.hs$' | xargs hothasktags > tags

** Executable size
[[http://stackoverflow.com/questions/6115459/small-haskell-program-compiled-with-ghc-into-huge-binary][Don Stuart on stack exchange]]

** a working GLFW/reactive-banana example?
stack overflow question
* Life Hacks
** Tax-return related papers:
	  Annual Mortgage Statement 
		Jaaropgraaf
		Student Costs
		WOZ
** Delivery Service
	 +31686093284
* New Task Example

** Create a Design


*** Design Ideas:

		[[http://wordpress.org/themes/][Cool_Ideas]]
		procedural houses in Houdini -> Godot
		notes to waves translator
		
* Projects
** HNGL

*** on HNGL

>> Fri Dec 20 11:07:18 CET 2013
>> Fri Dec 20 16:58:16 CET 2013
>> Journal #3 (#1 and #2 got lost -_-)

Editable -> Instancable -> Drawabale


Graphics.HNGL.Rendering
Graphics.HNGL.Data



toInstancable :: Editable -> Instancable

toDrawable :: Instancable -> Drawable

draw :: Drawable -> IO ()

toAnimatable :: Drawable -> Animation -> Animatable

data Animation = Time Freq

data Time = Float

data Freq = Float

animate :: Animatable -> IO ()
*** HNGL progress
***** TODO : simplify tutorial10 to only do what it's supposed to do:
	it's supposed to draw a textured square in the simplest way possible.
	
[Sun Dec 22 20:31:19 CET 2013]
>> on HNGL:

managed to do inital HNGL commit with basic modules functioning OK
next thing to do is introducing support for basic shapes instances draw, e.g.:

draw Square pos side
... too tired now, need to switch tasks for a 

[[file:~/Projects/Haskell/OpenGL/Haskell-OpenGL-Tutorial/tutorial04/HNGL][Finished Here]]
<2013-12-27 Fri>



[Thu Jan 16 21:42:27 CET 2014]
>> On FFI
Looking into FFI.  Created Bookmarks on [[*FFI][FFI/Haskell]]

[Wed Jan 22 18:45:13 CET 2014]
Uploaded the preview version of tutorial03 to GitHub
Noticed 2 stars - it looks like someone found code useful

**** DONE : port the code to GLFW -> GLFW-b
[[https://github.com/madjestic/Haskell-OpenGL-Tutorial/issues/2][proposed by listx]]
[[http://hackage.haskell.org/package/GLFW-0.5.2.0/docs/Graphics-UI-GLFW.html][GLFW on Hackage]]
[[http://hackage.haskell.org/package/GLFW-b][GLFW-b on hackage]]
[[http://www.tapdancinggoats.com/opengl-in-haskell-glfw-b-boilerplate.htm][GLFW-b Boilerplate]]
[[http://www.tapdancinggoats.com/haskell-life-repa.htm][Conway's Game of Life with GLFW-b]]

**** DONE : introduce support for vertex colors
[[https://github.com/madjestic/Haskell-OpenGL-Tutorial/issues/3][link to the issue]]

http://www.opengl-tutorial.org/beginners-tutorials/tutorial-1-opening-a-window/][Modern OpenGL tutorial C++/Qt

[[http://nopper.tv/norbert/opengl.html][OpenGL 3 and OpenGL 4 with GLSL]]
[[https://github.com/McNopper/OpenGL]]

[[http://www.swiftless.com/opengl4tuts.html][OpenGL4 Tutorial]]

[[http://openglbook.com/the-book/preface-what-is-opengl/][OpenGL Book]]

[[http://antongerdelan.net/opengl/][Anton's tutorials]]

**** DONE : Vertex2 -> Vertex4
**** DONE : polivariadic createWindow:
createWindow title (sizex, sizey)
createWindow title (sizex, sizey) color
**** DONE : polivariadic intiResources:
initResources vs = ...
initResources cs vs = ...

**** Wed Jan 29 00:35:22 CET 2014 on Rendering.hs, missing square
I eddited the [[~/Projects/Haskell/OpenGL/Haskell-OpenGL-Tutorial/tutorial04/NGL/Rendering.hs][Rendering.hs]] file with intention to introduce a second 
vertex array object to store color data, the code compiles, but the
blue square seems to be missing now - need to investigate the situation.
Too tired now.

> Fixed.

**** DONE : Animation Support
***** DONE : time to take a look into FRP and animation :)
[[file:~/Projects/Haskell/reactive-banana/reactive-banana][reactive-banana source and examples]]
See the project homepage <http://haskell.org/haskellwiki/Reactive-banana>

Thu Apr 24 17:56:30 CEST 2014 [[https://github.com/madjestic/reactive-banana/blob/master/reactive-banana/doc/examples/Counter.hs][Added a Counter example]]
***** DONE : I am in the middle of hooking up FRP to GL calls
			[[https://github.com/cdxr/reactive-banana-glfw][reactive-banana-glfw]] serves as a glue,
			but I yet to figure out how to combine GL calls 
			with the reactive banana event loops
			[[file:~/Projects/Haskell/Haskell-OpenGL-Tutorial/tutorial08/Main.hs::--%20|%20I%20probably%20need%20to%20make%20a%20GL%20call%20from%20a%20reactimate%20function%20call.%20Sersious%20refactoring%20pending][Fri May 30 00:32:51 CEST 2014]]

			[[http://hackage.haskell.org/package/reactive-banana-0.8.0.2/docs/Control-Event-Handler.html#t:AddHandler][Read on AddHandlers]]
			[[http://en.wikibooks.org/wiki/Haskell/Concurrency][Read on Concurrency]]
			[[file:~/Projects/Haskell/Junk/GameLoop.hs][GameLoop example]] - maybe some clues from here

			It looks like I will need to call an update event from
			a separate sleeper thread.  It should be connected to 
			reactive-banana event system via addHandlers interface
			Sat Jun  7 18:20:36 CEST 

			The above sounds very similar to:
			[[https://github.com/fumieval/free-game/issues/30]]
			Sat Oct 18 00:26:23 CEST 2014

			

**** DONE : Texture Support
		 [[http://stackoverflow.com/questions/23540558/haskell-opengl-texture-glfw]]
		 [[http://stackoverflow.com/questions/24114767/haskell-opengl-texture-only-average-colour]]
		 [[http://stackoverflow.com/questions/10468845/juicypixels-texture-loading-in-haskell-opengl]]
		 [[https://github.com/fiendfan1/Haskell-OpenGL]]
		 http://eax.me/haskell-opengl-textures/
		 Sat Oct 18 00:26:32 CEST 2014

		 accomplished in tutorial10 thanks to tips from haskell@cafe mail-list

**** IN-PROGRESS : Make Elegant, Clean-up
		 Sun Oct 26 00:14:41 CEST 2014
		 refactoring Rendering.hs, Shape.hs

		 [2015-02-16 Mon]
		 Made some progress with refactoring stuff:  
		 added a Primitive type-class in Shape module:
		         toDrawable :: Color -> a -> Drawable
						 toPoints   :: a -> Points

						 Color should probably be a Property instead
						 e.g.:
						 Property = Color | Some other property
						 however at the moment it has no value and I don't know better.

		[2015-04-17 Fri]
		tutorial10 - more concise version of tutorial11
		tutorial11 - Typeclasses in NGL.Rendering with some commented 
		             redundant code, that could still be useful
		tutorial12 - has bits and pieces of tutorial 11
***** WAITING : create a UV-projection:
			toUV :: Projection -> UV in module Shape.hs

		  The foundation is there, I decided to postpone concrete implementation
			till the need arrives.
***** TODO : Create a boilerplate:
****** TODO : All code on one page:  draw a textured sqaure
			 CLOCK: [2015-11-30 Mon 19:12]--[2015-11-30 Mon 19:13] =>  0:01
******* TODO : in C++
				CLOCK: [2015-11-30 Mon 19:13]--[2015-11-30 Mon 19:22] =>  0:09
				[[~/.contexts/OpenGL_Bible/src/my_first_spinning_cube]] - seems like a good starting point for a spinning textured triangle
				<2015-12-28 Mon>
******* TODO : in Haskell			 
** FRP
*** Reactive Banana
[[*:%20Animation%20Support...][Reactive Banana Animation Support...]]
**** TODO Reading: [[http://johnlato.blogspot.nl/2011/04/thoughts-on-frp.html][Sound and Software]]
**** TODO Reading: [[http://www.kazachonak.com/2012/06/reactive-programming.html][Reactive Programming]]
**** TODO Reading: [[http://conal.net/fran/tutorial.htm][Fran Tutorial (Connal Elliot)]]
**** TODO Watch  : [[http://vimeo.com/6686570][Push-pull Functional Reactive Programming]]
*** NetWire
[[http://hackage.haskell.org/package/netwire-4.0.5/docs/Control-Wire.html][Control.Wire]]
[[http://hub.darcs.net/ertes/netwire/browse/README.md][Netwire on Darcs]]
[[http://www.haskell.org/haskellwiki/Netwire][Netwire on Haskell Wiki]]
[[https://github.com/MaxDaten/netwire-examples][Netwire Examples on GitHub]]

** on Emacs

*** IN-PROGRESS Learn to use Org-mode
**** DONE : Learno how to do cumulative timer
		 CLOCK: [2015-11-30 Mon 19:22]
		 0:00:00 0:00:04 0:00:11 (C-x .) insert relative timer at point
		 - 0:00:30 :: one
		 - 0:00:39 :: two (C-x -) relative timer with a description.

		 http://orgmode.org/manual/The-clock-table.html#The-clock-table
		 Time total can be computed in emacs/excel-sheet like manner
		 [2015-12-01 Tue]

**** DONE : Learn how to work with multiple TODO files
		 http://orgmode.org/manual/Agenda-views.html#Agenda-views
		 [2015-12-01 Tue]

		 http://orgmode.org/manual/Agenda-files.html#Agenda-files
		 (C-c [ ) Add current file to the list of agenda files. 
		 (C-c ] ) Remove current file from the list of agenda files. 
*** DONE Learn how to open pdfs at a given page with Okular
[[http://stackoverflow.com/questions/20792659/how-do-i-make-org-mode-open-pdf-files-in-okulus-at-page-nnn][stackoverflow_topi]]c
<2013-12-27 Fri>

** on Blogs
*** TurtlesTurtlesTurtles
**** DONE Update the content, according to the latest state of NGL tutorial
**** DONE : Write a prime number calculator.
*** PuurBliss.NL
**** DONE : fix glyphicons:
		 It turns out that the < > glyphs are not being displayed correctly.
**** TODO : work on logo
		 
		 [[file:~/.contexts/Puurbliss/Pictures/Puurbliss]]
		 
** Reading
*** DONE Prime Obsession
** Houdini
*** DONE : Hook up a PS3 controller to mu
		It's working.
		Event stream can be read from [[file:/dev/input/js0]]
		Fri May 30 00:31:18 CEST 2014
*** TODO : Figure out how to read input:
		http://scaryreasoner.wordpress.com/2008/02/22/programming-joysticks-with-linux/
		https://www.kernel.org/doc/Documentation/input/joystick-api.txt
		http://stackoverflow.com/questions/16032982/getting-live-info-from-dev-input

		[2015-10-25 Sun]
		As a temporary measure: https://github.com/ArthurYidi/Houdini-Joystick

		Sony PLAYSTATION(R)3 Controller (/dev/input/js0)

*** DONE : Waves tutorial sidefx
*** DONE : Waves tutorial cmivfx 1
*** DONE : Waves tutorial cmivfx 2
*** DONE : Investigate how to render ocean nicely
*** TODO : Work on a small example of gushing water effect :houdini::effect::vfx:
		<2015-12-02 Wed>

		/home/madjestic/Projects/Houdini/Fluids/Fluid_Test_00
		<2015-12-03 Thu>

*** TODO : Set up water shader
		[[https://www.sidefx.com/index.php?option%3Dcom_content&task%3Dview&id%3D3168&Itemid%3D412][H15 | FLIP WORKFLOW ENHANCEMENTS]]
		[[https://vimeo.com/41314793][Houdini Mantra | Waterfall]]
		[[http://forums.odforce.net/topic/20467-ocean-area-light-highlights-problem/?hl%3D%252Bocean%2B%252Bwhite%2B%252Bspots%2B%252Bpbr#entry122295][Ocean Area light highlights problem]]
		
		
		
**** TODO : Simulation and modelling
**** TODO : Shading
**** TODO : Rendering

** General
*** TODO : Read on setting up cron Jobs [[http://stackoverflow.com/questions/1603109/how-to-make-a-python-script-run-like-a-service-or-daemon-in-linux][{Stack Overflow}]]
*** DONE : Set up a TODO directory with all active TODO's
		[[*TODO:][here]]

** Genome
	 [[http://en.wikipedia.org/wiki/Human_Genome_Project][Human Genome Project]] on wiki
	 [[http://en.wikipedia.org/wiki/Ploidy#Haploid_and_monoploid][Ploidy]] on wiki
	 [[http://en.wikipedia.org/wiki/Cytokinesis][Cytokinesis]] on wiki
	 [[http://en.wikipedia.org/wiki/Fission_(biology)][Binary Fission]] on wiki
** GTK+
	 [[http://www.micahcarrick.com/gtk-glade-tutorial-part-1.html]]
* Rocket!
	A simple game project: similar to Angry birds, but in space with planets.  A dynamics-based (gravity, gravitational pool of planets).
	<2015-12-04 Fri>

* Study
** M140: Introducing Statistics
*** DONE : TMA02:
*** DONE 26 April 2014
**** DONE : TMA02: Q1: 
Computer Book 1: pp.35-48
surgeons.mtw (box-plotting in Minitab)
**** DONE : TMA02: Q2
***** DONE : Book2 pp.39-47 (on different sampling types)
finished at p.44.
done
Sat Apr 26 16:03:45 CEST 2014


**** DONE : TMA02: Q3
*** DONE : TMA03
*** DONE : [[file:~/Documents/M140/TMA04/m140_tma04.pdf][TMA04]]
*** DONE : [[https://learn2.open.ac.uk/mod/quiz/attempt.php?attempt%3D963365][ICMA43]]

*** DONE : Learn Basic R
   It looks like it's a dead end.
	 
	 Julia is a much stronger alternative.  It's much faster than R, Julia is
	 a propper programmin language, has bindings or interfaces to C++,Python

	 Haskell is a much stronger alternative too.  Obviously.

* Godot Engine
** Animated Ocean surface:
	 Something along the lines with:
	 program a new object in C++, sample verted positions..:
	 [[https://github.com/okamstudio/godot/wiki/advanced]]
	 [[https://github.com/okamstudio/godot/wiki/class_mesh]]
	
* Unreal Engine
	- contacted popcornfx:
		The Linux build is not here for now, but should not be a problem, once we get the plugin stabilized on Win64, we will begin to build for other platform.
	  The PopcornFX Editor is currently only compatible with Windows, but stay in touch...

	urls:
	https://docs.unrealengine.com/latest/INT/GettingStarted/FromUnity/index.html
	https://docs.unrealengine.com/latest/INT/Gameplay/ClassCreation/index.html
	https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/index.html
	https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/Reference/Classes/index.html
	https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/Reference/Functions/index.html
	https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/Reference/Properties/index.html
	https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/Reference/Structs/index.html
	https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/Reference/Interfaces/index.html

** 101
	 export LD_LIBRARY_PATH=.
	 ./UE4Editor ~/Projects/Unreal_Projects/MyProject4/MyProject4.uproject
	 primusrun ./UE4Editor ~/Projects/Unreal_Projects/MyProject/MyProject.uproject -opengl4

* MST124: Essential Mathematics 1
** DONE :	[[file:~/Documents/MST124/TMA02/mst124_unit4.pdf][Unit 4]] (textbook)
** DONE :	[[file:~/Documents/MST124/TMA02/TMA_02.pdf][TMA 02]]
** DONE : TMA_03
** DONE : [[https://learn2.open.ac.uk/mod/quiz/attempt.php?attempt%3D965296&page%3D1&scrollpos%3D0#q3][Unit 9 Practice Quiz]]
** DONE : [[https://learn2.open.ac.uk/mod/quiz/attempt.php?attempt%3D965295&page%3D1&scrollpos%3D0#q5][ICMA44]]
** DONE : [[file:~/Documents/MST124/TMA04/mst124_14b_tma04.pdf][TMA_04]]
* MST125: Essential Mathematics 2
	One characteristic of a reflection that distinguishes it from a rotation or a
	translation is that it reverses vertex order.

	An isometry maps any polygon to a polygon of the same size and
	shape. In particular, the vertices of the polygon are mapped to the
	vertices of the image polygon.

	A linear transformation leaves the origin fixed.

	If an implication is true, then its converse is either true or false.

** One-to-one linear transformations
	 Determinant of One-to-one linear transformations does not equal 0.
	 One-to-one linear transformations preserve linearity
	 One-to-one linear transformations map lines to lines

** DONE : p 48

* Houdini
	/home/madjestic/Projects/Houdini/Fractals/model.hipnc
	- fractals
	- line intersection

		[2015-10-27 Tue]
		Continue reading about VRAY procedural:
		http://www.peterclaes.be/blog/?tag=vrayprocedural
* SIGGRAPH 2015
** Paper ideas
*** Feature-preserving curve resampling
*** Lindenmayer: Procedurally-assisted LOD generation.
* edX: FP101x
	[[https://courses.edx.org/courses/DelftX/FP101x/3T2014/courseware/7c7ec15948b84b1a9c14673bddbcf8aa/9441ebb13fad49dca4dee53107b3ce5a/][Continue with HW]]
	Mon Nov 10 22:38:53 CET 2014

* Mathematics																													 :math:
	The Zakon Series on Mathematical Analysis
	[[~/Documents/Mathematics/zakon-basic-a4-one.pdf][Basic Concepts of Mathematics]]
	[[file:~/Documents/Mathematics/multivariable.pdf][Multivariable Calculus by David Guichard]]

** W.S. Jevons
	 [[https://en.wikipedia.org/wiki/William_Stanley_Jevons]]
	 [[https://www.marxists.org/reference/subject/economics/jevons/mathem.htm]]

* Principia Mathemtica
	Analysis and Geometry, Theory of agregates (Cantor)
	Symbolic Logic (Peano)
	

** Guerrilla Math Study Group (GMSG)
	 [[https://sites.google.com/site/guerrillamathstudygroup/][google sites link]]
* Guerrilla
** Camalot
	 Curvature filter: Instead of failing back onto 'All' - sort by attribute and leave 1 (or more)

*** DONE If I win this tomorrow, get myself "Pathologic HD" as a present
		http://www.gog.com/game/pathologic_classic_hd
		<2015-11-10 Tue>
		
* Active Links:
	[[https://learn2.open.ac.uk/mod/quiz/attempt.php?attempt%3D935459&page%3D1][https://learn2.open.ac.uk/mod/quiz/attempt.php?attempt=935459&page=1]]
	[[https://learn2.open.ac.uk/mod/quiz/attempt.php?attempt%3D913986&page%3D13][https://learn2.open.ac.uk/mod/quiz/attempt.php?attempt=913986&page=13]]
* Tree Parser
** DONE : for a cluster of connected points it id attr, 
	 pick the point with the lowest id

	 (lowest point should have the list with all nodes above)
** IN-PROGRESS : create a point attribute (String -> Tree)
	 Tree -> Tree of id's -> flatten -> point string attr
* Pitivi Missing Dependencies
	emerge -av gnome-icon-theme
	
	asked a question, related to gnome GUI issues on #pitivi
	>> guys said gentoo is still 0.93. Should try later.
	[2014-11-10 Mon]
	
* LaTeX
** Google Sites Template
<img src="http://www.google.com/chart?cht=tx&chf=bg,s,FFFFFF00&chco=000000&chl=
\sqrt(x^2+y^2)=\exp^x+\sum_{i=1}^nx^i
" />
	 
* Stylistic Analysis, Bias filtering, etc
	 http://en.wikipedia.org/wiki/Natural_language_processing
	 http://en.wikipedia.org/wiki/Sentiment_analysis
	 http://www.kaspik.com/ (web sentiment analysis)

	 N.Chomsky: "Three models for the description of language"
	 http://chomsky.info/articles/195609--.pdf

	 http://www.its.caltech.edu/~matilde/GraphGrammarsLing.pdf

	 [[http://www.cs.dartmouth.edu/reports/TR2014-754.pdf][StyleCheck: An Automated Stylistic Analysis Tool (PDF)]]

	 [[file:~/Pictures/Human_Language_Families_ru.png]]

	 [[https://ru.wikipedia.org/wiki/%25D0%25A2%25D0%25B8%25D0%25BF%25D0%25BE%25D0%25BB%25D0%25BE%25D0%25B3%25D0%25B8%25D1%258F_(%25D0%25BB%25D0%25B8%25D0%25BD%25D0%25B3%25D0%25B2%25D0%25B8%25D1%2581%25D1%2582%25D0%25B8%25D0%25BA%25D0%25B0)][Типология (лингвистика)]]

	 [[https://ru.wikipedia.org/wiki/%25D0%2590%25D0%25BA%25D1%2582%25D0%25B8%25D0%25B2%25D0%25BD%25D1%258B%25D0%25B5_%25D1%258F%25D0%25B7%25D1%258B%25D0%25BA%25D0%25B8][Активные языки]]

	 [[https://en.wikipedia.org/wiki/Ferdinand_de_Saussure][Ferdinand de Saussure]]

	 [[https://en.wikipedia.org/wiki/Roman_Jakobson][Roman Jakobson]]

	 [[https://en.wikipedia.org/wiki/Russian_formalism][Russian formalism]]

	 [[https://en.wikipedia.org/wiki/Stylistics_(field_of_study)][Stylistics (field of study)]]

	 [[https://en.wikipedia.org/wiki/Stylistics_(field_of_study)][Stylistics (field of study)]]

	 
*** Related Read:
		http://en.wikipedia.org/wiki/Framework_Programmes_for_Research_and_Technological_Development
		http://en.wikipedia.org/wiki/European_Atomic_Energy_Community

* Books
	[[/home/madjestic/Documents/Physically_Based_Rendering.pdf][Physically Based Rendering]]
	[[/home/madjestic/Documents/Naming_Infinity.pdf][Kolmogorov: "Imena beskonechnosti"
	Naming Infinity]]
	sonin.ru
	Мифы экономики
	[[/home/madjestic/Documents/Freakonomics.djvu][Freakonomics]]	
	libgen.ru - fake DNA

* Markov Chains...
	http://www.dartmouth.edu/~chance/teaching_aids/books_articles/probability_book/Chapter11.pdf
* Bookmarks:
** Programming
*** Haskell
		[[https://github.com/madjestic/mu/tree/master/Projects/Haskell/Junk/heterogenous_lists][finished a small heterogenous collections example.]]
		[2014-11-10 Mon]
		
		[[*edX:%20FP101x][edX]] A course I intend to finish
		Mon Nov 10 22:40:49 CET 2014

		Monads, Monoids, Functors:
		http://learnyouahaskell.com/making-our-own-types-and-typeclasses
		http://learnyouahaskell.com/functors-applicative-functors-and-monoids
		http://learnyouahaskell.com/a-fistful-of-monads

**** FFI
[[http://www.haskell.org/haskellwiki/FFI_cook_book][FFI Cook Book]]
[[http://book.realworldhaskell.org/read/interfacing-with-c-the-ffi.html][RealWorldHaskell FFI]]
** Emacs
*** Org Mode
**** Links
		 [[http://orgmode.org/manual/Handling-links.html][Handling Links]]
*** Mail Mode :problem::luxury:
		http://www.emacswiki.org/emacs/GnusGmail
		https://github.com/redguardtoo/mastering-emacs-in-one-year-guide/blob/master/gnus-guide-en.org
		https://eschulte.github.io/emacs24-starter-kit/starter-kit-gnus.html
		<2015-12-02 Wed>

		The initial setup was a breeze.
**** TODO : Set up message filtering
		 Use POPFile at Linux:
		 http://blog.binchen.org/posts/use-popfile-at-linux.html (gnus email antispam and fultering)
		 <2015-12-03 Thu>

		 
*** Jabber Mode :problem::luxury:
		http://www.emacswiki.org/emacs/JabberEl
		<2015-12-02 Wed>
* Entropy
** Machine Learning
	 http://www.cs.cmu.edu/~tom/mlbook.html	 

	 [[file:~/Documents/Mathematics/Machine_Learning_-Tom_Mitchell.pdf]]
	 "...or personal software assistants learning the evolving interests of their users in order to highlight especially relevant stories from the online morning newspaper."

	 Definition: A computer program is said to learn from experience E with respect
	 to some class of tasks T and performance measure P, if its performance at tasks in
	 T, as measured by P, improves with experience E.

	 three features: the class of tasks, the measure of performance to be improved, and
	 the source of experience.

	  a database system that allows users to update data entries

		"learning" -  the class of programs that improve through experience. 

		problem of credit assignment, or determining the degree to which each move in
		the sequence deserves credit or blame for the final outcome. 

		The first design choice we face is to choose the type of training experience from
		which our system will learn.
		A second important attribute of the training experience is the degree to which
		the learner controls the sequence of training examples. 
		A third important attribute of the training experience is how well it repre-
		sents the distribution of examples over which the final system performance P must
		be measured.

		most current theory of machine learning rests on the crucial assumption that
		the distribution of training examples is identical to the distribution of test ex-
		amples.

		On the other hand, the more expressive the representation, the more training data
		the program will require in order to choose among the alternative hypotheses it
		can represent

		 the approach of iteratively estimating training values based on estimates of
		 successor state values can be proven to converge toward perfect estimates of V_train

		 performance system, critic; generalizer, and experiment generator. Many machine learning systems can-be usefully characterized in terms of these four generic modules.
* Cognitive science
	P != NP
	http://en.wikipedia.org/wiki/P_versus_NP_problem

	Vertex Cover problem:
	http://en.wikipedia.org/wiki/Vertex_cover

	Multivariad Revolving algorythmic complexity (book)

	http://fpt.wikidot.com/

	https://www.mturk.com/mturk/welcome

	http://en.wikipedia.org/wiki/Computers_and_Intractability (book on algorithms)

	http://www.amazon.com/Computers-Intractability-NP-Completeness-Mathematical-Sciences/dp/0716710455

	Theory of the mind:
	- How do agents know what other agents know?
	- How do you simulate orders of the mind?

	Prediction building part of the brain is not a result of processing by
	Sensor-Motoric part of the brain.

	Satisfaction of search problem.

	http://www.rageproject.eu/

	Higher-order theory of mind in Tacit Communication Game
	http://www.harmendeweerd.nl/papers/20140908_Tacit_Communication_Game.pdf

** Music and congnition II
	 
	~4% of the population share amusia

	Scale, Contour, interval, Rhythm, Meter (Memory)
	Pitch test

	Dysmusia vs. Dysmelodia

	Information content of a note

	florence foster jenkins (amusic opera singer)

	Bayesuan generative models

	posterior       = likelihood, priority
	                  P(cause|signal)*P(cause)/P(signal)
	P(cause|signal)
	...

	P(M): the likelhood  of individual metres (estimated from a corpus of data)

	

	Melody segmentation:
	
	Unexpected note - high information content, low probability

	On Entropy in Music:
	http://ir.uiowa.edu/cgi/viewcontent.cgi?article=1844&context=etd (p.7)

	https://mitpress.mit.edu/books/platos-camera

	Steven Pinker
	http://www.newrepublic.com/
* IRC
	IRCnet Server : open.ircnet.net

* sb7code reading, examples
	OpenGL Super Bible ed.7
	Projects/OpenGL/sb7code/src/book - Makefile works now

	[2015-09-23 Wed]
	hack cpp/emacs environment: http://tuhdo.github.io/c-ide.html
	read on the bible: [[file:~/Documents/Programming/OpenGL/Graham%20Sellers,%20Richard%20S.%20Wright%20Jr.,%20Nicholas%20Haemel%20-%20OpenGL%20SuperBible%20Comprehensive%20Tutorial%20and%20Reference,%207th%20Edition%20-%202015/OpenGL_Bible.pdf][file:~/Documents/Programming/OpenGL/Graham Sellers, Richard S. Wright Jr., Nicholas Haemel - OpenGL SuperBible Comprehensive Tutorial and Reference, 7th Edition - 2015/OpenGL_Bible.pdf]]

	try the ../book code in VS, see if it autocompletes struct APPINFO
	
* OpenGL notes
	Coordinate Systems, Spaces:
	http://www.songho.ca/opengl/gl_projectionmatrix.html
	http://learnopengl.com/#!Getting-started/Coordinate-Systems

	taking the cross product of the forward vector and our sideways
	vector to produce a third that is orthogonal to both and that represents up with respect to
	the camera.

	[2015-10-13 Tue]
	Continue reading on p.137 - Data structures and buffers.

	glBufferSubData(), glNamedBufferSubData() - map a datastore to a Buffer,
	(defined with  glBufferStorage() glNamedBufferStorage() )

	glMapBuffer(), glMapNamedBuffer() - map an arbitrary memory address to a Buffer.
	glMapBufferRange(), glMapNamedBufferRange()
	
* PVR
	export PVR_PYTHON_PATH="/usr/include/python2.7/"
	scons lib
	scons pylib

	/usr/lib/gcc/x86_64-pc-linux-gnu/4.8.5/../../../../x86_64-pc-linux-gnu/bin/ld: cannot find -lboost_python
	/usr/lib/gcc/x86_64-pc-linux-gnu/4.8.5/../../../../x86_64-pc-linux-gnu/bin/ld: cannot find -lpython2.6

	[2015-09-22 Tue]
	[[file:~/Projects/pvr/CMakeLists.txt]] works now, submitted to github
	# Compile flags
	...
	SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pipe -fPIC -fpermissive")
	...

	... however, (~/Projects/pvr/libpvr) 'scons pylib' from 
	https://github.com/pvrbook/pvr still fails:
	Linking    build/linux2/g++/m64/release/python26/_pvr.so
	/usr/lib/gcc/x86_64-pc-linux-gnu/4.8.5/../../../../x86_64-pc-linux-gnu/bin/ld: cannot find -lboost_python
	/usr/lib/gcc/x86_64-pc-linux-gnu/4.8.5/../../../../x86_64-pc-linux-gnu/bin/ld: cannot find -lpython2.6
	collect2: error: ld returned 1 exit status
	scons: *** [build/linux2/g++/m64/release/python26/_pvr.so] Error 1
	scons: building terminated because of errors.
	
	, finish digging here: [[file:~/Projects/pvr/libpvr/BuildSupport.py]]

	[2015-09-23 Wed]
	compilation issues solved by:
	ln -s ./libboost_python-2.7.so ./libboost_python.so
	ln -s ./libpython2.7.so ./libpython2.6.so

	[2015-09-24 Thu]
	Solved:
	[[https://github.com/pvrbook/pvr/pull/12]] (Build instructions for Gentoo)

	[2015-10-12 Mon]
	~/Projects/pvr_fork@madjestic/pvr/scenes/book/chapter_1 $ python fig_1_1.py
	
* mantra
	Houdini Help:
	http://127.0.0.1:48626/render/
	http://127.0.0.1:48626/vex/contexts/shading_contexts

** tests
	 [[/home/madjestic/Projects/Houdini/Mantra/tests/test_01.hipnc]]
	 A simple sphere, occlusion, GI.

	 [[/home/madjestic/Projects/Houdini/Mantra/tests/test_02.hipnc]]
	 particles shaded as speric volumes
	 
	 [[/home/madjestic/Projects/Houdini/Mantra/tests/test_03.hipnc]]
	 Basic shapes, experiments with shading
	 
* iptables
	https://wiki.archlinux.org/index.php/Iptables
	https://wiki.gentoo.org/wiki/Iptables#IPv6.5B2.5D.5B.E2.80.93_1.5D
	http://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/

	quick search shows that iptables requires to set up the rules for each connection
	individually, which seems tedious.  https://github.com/themighty1/lpfw seems to 
	address that, however it seems to support IPv4 only.... investigate further.
* tables
| r | 0/1   | 0  | 1  | 0-1 | rnd | SBR | SBF | ABR | ABF |
|---+-------+----+----+-----+-----+-----+-----+-----+-----|
| 1 | 0/1   | -  | +  | 0:- | 0:- | 0:- | 0:- | 0:- | 0:- |
| 0 | 1/1   | +  | -  | 1:- | 0:+ | 0:+ | 0:+ | 0:+ | 0:+ |
| 0 | 2/1   | +  | -  | 0:+ | 1:- | 1:- | 1:- | 1:- | 1:- |
| 1 | 2/2   | -  | +  | 1:+ | 0:- | 1:+ | 1:+ | 1:+ | 1:+ |
| 1 | 2/3   | -  | +  | 0:- | 0:- | 1:+ | 0:- | 1:+ | 0:- |
| 0 | 3/3   | +  | -  | 1:- | 0:+ | 0:+ | 0:+ | 0:+ | 0:+ |
| 1 | 3/4   | -  | +  | 0:- | 1:+ | 0:- | 1:+ | 1:+ | 1:+ |
| 0 | 4/4   | +  | -  | 1:- | 0:+ | 0:+ | 0:+ | 0:+ | 0:+ |
| 1 | 4/5   | -  | +  | 0:- | 1:+ | 1:+ | 1:+ | 1:+ | 1:+ |
| 1 | 4/6   | -  | +  | 1:+ | 0:+ | 1:+ | 0:- | 0:- | 0:- |
| 0 | 5/6   | +  | -  | 0:+ | 0:+ | 0:+ | 0:+ | 0:+ | 0:+ |
| 0 | 6/6   | +  | -  | 1:- | 0:+ | 1:- | 1:- | 0:+ | 0:+ |
| 0 | 7/6   | +  | -  | 0:+ | 0:+ | 1:- | 0:+ | 0:+ | 1:- |
| 1 | 7/7   | -  | +  | 1:+ | 0:- | 1:+ | 1:+ | 1:+ | 1:+ |
| 0 | 8/7   | +  | -  | 0:+ | 0:+ | 1:- | 0:+ | 0:+ | 0:+ |
| 1 | 8/8   | -  | +  | 1:+ | 1:+ | 1:+ | 1:+ | 1:+ | 1:+ |
| 1 | 8/9   | -  | +  | 0:- | 1:+ | 1:+ | 0:- | 0:- | 0:- |
| 1 | 8/10  | -  | +  | 1:+ | 1:+ | 0:- | 0:- | 0:- | 0:- |
| 1 | 8/11  | -  | +  | 0:- | 0:- | 0:- | 0:- | 0:- | 0:- |
| 0 | 9/11  | +  | -  | 1:- | 1:- | 0:+ | 0:+ | 0:+ | 0:+ |
| 0 | 10/11 | +  | -  | 0:+ | 0:+ | 1:- | 1:- | 0:+ | 0:+ |
| 1 | 10/12 | -  | +  | 1:+ | 0:- | 1:+ | 1:+ | 0:- | 0:- |
| 1 | 10/13 | -  | +  | 0:- | 0:- | 1:+ | 0:- | 0:- | 0:- |
| 0 | 11/13 | +  | -  | 1:- | 0:+ | 0:+ | 0:+ | 0:+ | 0:+ |
| 1 | 11/14 | -  | +  | 0:- | 0:- | 0:- | 1:+ | 0:- | 0:- |
| 1 | 11/15 | -  | +  | 1:+ | 1:+ | 1:+ | 0:- | 0:- | 0:- |
| 0 | 12/15 | +  | -  | 0:+ | 0:+ | 0:+ | 0:+ | 0:+ | 0:+ |
| 0 | 13/15 | +  | -  | 1:- | 1:- | 1:- | 1:- | 0:+ | 0:+ |
| 0 | 14/15 | +  | -  | 0:+ | 0:+ | 1:- | 1:- | 0:+ | 0:+ |
|   |       | 14 | 15 |  14 |  18 |  17 |  16 |  19 | 17  |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
|   |       |    |    |     |     |     |     |     |     |
#+TBLFM: 
* RAID 10 project
** TODO : Build RAID-10.  Project Ksi:
	 2x500Gb SCI SSD drives as RAID-10: fast IO and reliability, but space is limited to the smallest drive.
** TODO : Project Omicron:
	 2x1Tb Raid-10?
	 <2015-12-10 Thu>
* TODO:
** IN-PROGRESS [[*:%20Make%20Elegant,%20Clean-up][Make Elegant, Clean-up]]
** IN-PROGRESS : Write a make file that can be run like this:
	 make clean
	   - and it will choose from a number of ons
		 [2015-02-17 Tue]
		 - made a clean.sh file that cleans up stuff [[file:~/Projects/Haskell/Haskell-OpenGL-Tutorial/tutorial10/clean][here]]

** DONE : Experiment with caustics (an example from Houdini Help)
** TODO : Write a python daemon
	 http://www.jejik.com/articles/2007/02/a_simple_unix_linux_daemon_in_python/
	 https://pypi.python.org/pypi/python-daemon/
	 [2015-12-02 Wed]
	 
** WAITING : figure out what's up with Nvidia Optimus
	 Still has some minor(?) issues: https://forums.gentoo.org/viewtopic-t-1032214-highlight-.html
	 [2015-11-30 Mon]

	 Bumblebee:
	 http://bumblebee-project.org/
	 troubleshooting:
	 https://github.com/Bumblebee-Project/Bumblebee/wiki/Troubleshooting
	 reporting issues:
	 https://github.com/Bumblebee-Project/Bumblebee/wiki/Reporting-Issues
	 
** DONE : link it here
** DONE : Set up fallout 2 ~/Projects/games/falltergeist: it is missing some files, get them from an official game installation

** DONE : compile latest Unreal Engine
	 [2015-11-30 Mon]
	 tried latest, it fails somewhere during the Setup.sh, reasons unknown, log file does not get produced.

	 https://github.com/EpicGames/UnrealEngine/blob/4.10/Engine/Build/BatchFiles/Linux/README.md
	 git clone https://github.com/EpicGames/UnrealEngine -b 4.10
	 (follow README)

	 Latest version worked
	 <2015-12-11 Fri>

** DONE : set up battery levels color-coding for xmonad
	 <2015-12-04 Fri>
	 <2015-12-07 Mon>
** TODO : Xmonad Fullscrean
	 https://github.com/Nadrieril/xmonad-config/blob/master/xmonad.hs
	 http://stackoverflow.com/questions/20446348/xmonad-toggle-fullscreen-xmobar
	 
* MIDI :music::synt:
	Ardouro
	BitWig

	[[http://proaudio.tuxfamily.org/wiki/index.php?title%3DRealtime_(RT)_Kernel][http://proaudio.tuxfamily.org/wiki/index.php?title=Realtime_(RT)_Kernel]]
	https://wiki.gentoo.org/wiki/Project:Sound/How_to_Enable_Realtime_for_Multimedia_Applications
	https://packages.gentoo.org/packages/media-plugins/calf

	https://forums.gentoo.org/viewtopic-p-7330590.html?sid=1fa73569fe3439e99b81625808e0f794
	http://gentoostudio.org/?p=maninstall&s=kernel
	http://www.gentoo-wiki.info/Jack
	<2015-12-27 Sun>
	
* History
	[[/home/madjestic/houdini/houdini/python2.7libs/dopparticlefluidtoolutils.py]]
	[[file:~/Projects/Python/Tree/Main.py][/Projects/Python/Tree/Main.py]] Fri Oct 17 23:47:43 CEST 2014

	[[*:%20Make%20Elegant,%20Clean-up][Sun Oct 26 00:10:42 CEST 2014
	refactoring, cleaning up Rendering.hs and Shape.hs]]

	

	nmcli device wifi connect Lambda password *********
	[2015-01-12 Mon]
	Biology (Micosis)
	[[*:%20Investigate%20how%20to%20render%20ocean%20nicely][Ocean Shader (displacement issues)]]

	[2015-02-01 Sun]
	Found a nice article on GTK+, continue reading later. (Which article?! <2015-12-03 Thu> )

	[2015-09-21 Mon]
	Trying to make [[*PVR][PVR]] compile.  [[*PVR][Getting some linker errors:]] (1)

	<2015-11-06 Fri> solved (1)

	<2015-11-08 Sun>
	#define W 0xFF, 0xFF, 0xFF, 0xFF
        static const GLubyte tex_data[] =
        {
            B, W, B, W, B, W, B, W, B, W, B, W, B, W, B, W,
            W, B, W, B, W, B, W, B, W, B, W, B, W, B, W, B,
            B, W, B, W, B, W, B, W, B, W, B, W, B, W, B, W,
            W, B, W, B, W, B, W, B, W, B, W, B, W, B, W, B,
            B, W, B, W, B, W, B, W, B, W, B, W, B, W, B, W,
            W, B, W, B, W, B, W, B, W, B, W, B, W, B, W, B,
            B, W, B, W, B, W, B, W, B, W, B, W, B, W, B, W,
            W, B, W, B, W, B, W, B, W, B, W, B, W, B, W, B,
            B, W, B, W, B, W, B, W, B, W, B, W, B, W, B, W,
            W, B, W, B, W, B, W, B, W, B, W, B, W, B, W, B,
            B, W, B, W, B, W, B, W, B, W, B, W, B, W, B, W,
            W, B, W, B, W, B, W, B, W, B, W, B, W, B, W, B,
            B, W, B, W, B, W, B, W, B, W, B, W, B, W, B, W,
            W, B, W, B, W, B, W, B, W, B, W, B, W, B, W, B,
            B, W, B, W, B, W, B, W, B, W, B, W, B, W, B, W,
            W, B, W, B, W, B, W, B, W, B, W, B, W, B, W, B,
        };
#undef B
#undef W

        glGenTextures(1, &tex_object[0]);
        glBindTexture(GL_TEXTURE_2D, tex_object[0]);
        glTexStorage2D(GL_TEXTURE_2D, 1, GL_RGB8, 16, 16);
        glTexSubImage2D(GL_TEXTURE_2D, 0, 0, 0, 16, 16, GL_RGBA, GL_UNSIGNED_BYTE, tex_data);
				...

				it looks like there are 16x16 rows x columns in the B,W,B,W... above as well as in tex-storage size delcaration

				Mipmapping gets its name from the Latin phrase multum in parvo

	Created a [[file:~/.contexts][~/.context]] for keeping clusters of activity together (dirs, pdfs, etc.)

	
	Figured out how to use parts of agenda-mode.
	http://orgmode.org/worg/org-tutorials/advanced-searching.html
	[2015-11-19 Thu]

	Timestamps for agenda-mode:
	http://orgmode.org/manual/Creating-timestamps.html
	(C-c ! ) inactive timestamp
	(C-c . ) timestamp

	Org-mode Agenda is awesome!
	http://orgmode.org/worg/org-tutorials/advanced-searching.html
	[2015-11-19 Thu] 
	(C-c a m) Match: +TIMESTAMP_IA>="<-2w>" (show ineactive timestamps)

** DONE : test todo - start a timer																 :foo::bar:
	 (C-c C-x C-i) start a timer (in timer)
	 (C-c C-x C-o) end timer (out-timer)
	 CLOCK: [2015-11-28 Sat 18:01]--[2015-11-28 Sat 18:03] =>  0:02
	 
	 
	 

	

		[2015-01-12 Mon]
		(OlexP script to start Houdini)
		alias hdk='hdktmp=`pwd`; cd $HFS; source houdini_setup; cd $hdktmp; unset hdkt

		While playing with Gnus, I've recovered an old e-mail from Richard,
		he sent me a few pdf's on machine learning, among which was:
		[[file:~/Documents/Machine%20Learning%20in%20Action.pdf][file:~/Documents/Machine Learning in Action.pdf]]
